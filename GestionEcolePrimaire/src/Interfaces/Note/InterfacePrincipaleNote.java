/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Note;

import Entitées.Classe;
import Entitées.Eleve;
import Entitées.Matiere;
import Entitées.Note;
import Entitées.Seance;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Almia
 */
public class InterfacePrincipaleNote extends javax.swing.JPanel {

    /**
     * Creates new form InterfacePrincipaleNote
     */
    
     public static final void updateNote(){ 
        int x=jComboBoxClasse.getItemCount()-1;
        for(int j=0;j<x;j++){
             jComboBoxClasse.removeItemAt(1);}
        Classe[] tabeC=new Classe[1000];
        tabeC=Classe.AfficherClasses();
        if(tabeC!=null){
        int i=0;
             while (i<tabeC.length){
             jComboBoxClasse.addItem(tabeC[i].getNom());
             i++;
             
             }
        }
        
        
    }
    public InterfacePrincipaleNote() {
        initComponents();
        DefaultTableModel df=(DefaultTableModel) jTableNote.getModel();
        df.setColumnCount(3);
        updateNote();
        
        jComboBoxClasse.addActionListener((e) -> {
            if(jComboBoxSemestre.getSelectedIndex()!=0){
            df.setColumnCount(3);
            df.setRowCount(0);
            Classe x=Classe.ChargerClasseParNom(jComboBoxClasse.getSelectedItem().toString());
            Seance[] s=Seance.ChargerSeancesClasse(x.getId());
            if(s!=null){
            for(int pte=0;pte<s.length;pte++){
                TableColumn c = new TableColumn();
                String o=s[pte].getEns().getMat().getNom();
                df.addColumn(o);
            }
            for(int i=0;i<x.getListe().length;i++)
                df.addRow(new Object[]{x.getListe()[i].getId(),x.getListe()[i].getNom(),x.getListe()[i].getPrenom()});   
            for(int u=0;u<jTableNote.getRowCount();u++){
                int t=3;
                while(t<jTableNote.getColumnCount()){
                Note n=Note.ChargerNoteParEleve((int)jTableNote.getValueAt(u,0),jComboBoxSemestre.getSelectedIndex(),Matiere.ChargerMatiereParNom(jTableNote.getColumnName(t)).getId());
                if(n.getSem()!=0)
                jTableNote.setValueAt(n.getNote(), u, t);
                t++;}
            }
            
            }           
            else JOptionPane.showMessageDialog(null, "Aucune matiere n'est associée a cette classe!");
            }
            else {JOptionPane.showMessageDialog(null, "Veuillez-indiquer le semestre avant de choisir la classe!");
            jComboBoxClasse.setSelectedIndex(-1);}
            
                
            
                
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableNote = new javax.swing.JTable();
        jButtonEnregistrer = new javax.swing.JButton();
        jComboBoxClasse = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxSemestre = new javax.swing.JComboBox<>();

        jTableNote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOM", "PRENOM", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableNote.setColumnSelectionAllowed(true);
        jTableNote.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableNote);
        jTableNote.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTableNote.getColumnModel().getColumnCount() > 0) {
            jTableNote.getColumnModel().getColumn(0).setResizable(false);
            jTableNote.getColumnModel().getColumn(1).setResizable(false);
            jTableNote.getColumnModel().getColumn(2).setResizable(false);
            jTableNote.getColumnModel().getColumn(3).setResizable(false);
            jTableNote.getColumnModel().getColumn(4).setResizable(false);
            jTableNote.getColumnModel().getColumn(5).setResizable(false);
            jTableNote.getColumnModel().getColumn(6).setResizable(false);
            jTableNote.getColumnModel().getColumn(7).setResizable(false);
            jTableNote.getColumnModel().getColumn(8).setResizable(false);
            jTableNote.getColumnModel().getColumn(9).setResizable(false);
            jTableNote.getColumnModel().getColumn(10).setResizable(false);
            jTableNote.getColumnModel().getColumn(11).setResizable(false);
            jTableNote.getColumnModel().getColumn(12).setResizable(false);
        }

        jButtonEnregistrer.setText("Enregistrer");
        jButtonEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnregistrerActionPerformed(evt);
            }
        });

        jComboBoxClasse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Classe" }));

        jLabel1.setText("Classe:");

        jLabel2.setText("Semestre:");

        jComboBoxSemestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semestre", "1er Semestre", "2ème Semestre" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonEnregistrer)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonEnregistrer)
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnregistrerActionPerformed
        // TODO add your handling code here:
        jTableNote.editCellAt(-1,-1);
        Note n=new Note();
        int i=0;
        while(i<jTableNote.getRowCount()){            
            int j=3;
            while(j<jTableNote.getColumnCount()){
                if(jTableNote.getValueAt(i,j)!=null){
            n.setElv(Eleve.ChargerEleve((int)jTableNote.getValueAt(i,0)));
            n.setMat(Matiere.ChargerMatiereParNom(jTableNote.getColumnName(j)));
            n.setSem(jComboBoxSemestre.getSelectedIndex());         
            n.setNote((Double)jTableNote.getValueAt(i,j));
            if(Note.ChargerNoteParEleve((int)jTableNote.getValueAt(i,0),jComboBoxSemestre.getSelectedIndex(),Matiere.ChargerMatiereParNom(jTableNote.getColumnName(j)).getId()).getSem()==0)           
                n.AjouterNote();   
            else 
                n.ModifierNote((int)jTableNote.getValueAt(i,0),Matiere.ChargerMatiereParNom(jTableNote.getColumnName(j)).getId(),jComboBoxSemestre.getSelectedIndex());}
            j++;
            }
            
        i++;
        }

    }//GEN-LAST:event_jButtonEnregistrerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEnregistrer;
    private static javax.swing.JComboBox<String> jComboBoxClasse;
    private static javax.swing.JComboBox<String> jComboBoxSemestre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTableNote;
    // End of variables declaration//GEN-END:variables
}
