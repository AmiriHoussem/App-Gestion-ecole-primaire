/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Instituteur;
import Plus.Conversion;
import Plus.TextAreaRenderer;
import Entitées.Classe;
import Entitées.Enseigner;
import Entitées.Instituteur;
import Entitées.Matiere;
import Entitées.Salle;
import Entitées.Seance;
import javax.swing.table.TableModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
/**
 *
 * @author Almia
 */
public class InterfacePrincipaleInstituteur extends javax.swing.JPanel{

    /**
     * Creates new form InterfacePrincipaleInstituteur
     */  
    public static final void updateTableInst(){
        Instituteur[] tabe=new Instituteur[1000];
        tabe=Instituteur.AfficherInstituteurs();
        if(tabe!=null){
             int i=0;
             Object[][]o=new Object[tabe.length][3];
             while (i<tabe.length){
             o[i][0]=tabe[i].getNCIN();
             o[i][1]=tabe[i].getNom();
             o[i][2]=tabe[i].getPrenom();
             i++;
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"N°CIN", "NOM" ,"PRENOM"  });
            jTableINSTITUTEUR.setModel(model);    }
        else {
            DefaultTableModel m=(DefaultTableModel) jTableINSTITUTEUR.getModel();
            m.setRowCount(0);
            jTableINSTITUTEUR.setModel(m);
        }
    }
    
    
    
    public InterfacePrincipaleInstituteur(){
        initComponents();
        updateTableInst();   
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldRECHERCHE = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableINSTITUTEUR = new javax.swing.JTable();
        jButtonAJOUTER = new javax.swing.JButton();
        jButtonMODIFIER = new javax.swing.JButton();
        jButtonSUPPRIMER = new javax.swing.JButton();
        jButtonCONSULTER = new javax.swing.JButton();
        jButtonREFRESH = new javax.swing.JButton();
        jButtonECHERCHER = new javax.swing.JButton();
        jButtonEmplois = new javax.swing.JButton();

        jLabel1.setText("Recherher par:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N°CIN", "Nom", "Prenom" }));

        jTextFieldRECHERCHE.setText("rechercher");
        jTextFieldRECHERCHE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRECHERCHEMouseClicked(evt);
            }
        });

        jTableINSTITUTEUR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°CIN", "NOM", "PRENOM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableINSTITUTEUR.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableINSTITUTEUR);
        if (jTableINSTITUTEUR.getColumnModel().getColumnCount() > 0) {
            jTableINSTITUTEUR.getColumnModel().getColumn(0).setResizable(false);
            jTableINSTITUTEUR.getColumnModel().getColumn(1).setResizable(false);
            jTableINSTITUTEUR.getColumnModel().getColumn(2).setResizable(false);
        }

        jButtonAJOUTER.setText("Ajouter");
        jButtonAJOUTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAJOUTERActionPerformed(evt);
            }
        });

        jButtonMODIFIER.setText("Modifier");
        jButtonMODIFIER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMODIFIERActionPerformed(evt);
            }
        });

        jButtonSUPPRIMER.setText("Supprimer");
        jButtonSUPPRIMER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSUPPRIMERActionPerformed(evt);
            }
        });

        jButtonCONSULTER.setText("Consulter");
        jButtonCONSULTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCONSULTERActionPerformed(evt);
            }
        });

        jButtonREFRESH.setText("Refresh");
        jButtonREFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonREFRESHActionPerformed(evt);
            }
        });

        jButtonECHERCHER.setText("Rechercher");
        jButtonECHERCHER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonECHERCHERActionPerformed(evt);
            }
        });

        jButtonEmplois.setText("Emplois");
        jButtonEmplois.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmploisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(437, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonECHERCHER)
                .addGap(224, 224, 224))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jButtonREFRESH)
                        .addGap(296, 296, 296)
                        .addComponent(jButtonAJOUTER)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMODIFIER)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSUPPRIMER)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCONSULTER)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEmplois)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonECHERCHER)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAJOUTER)
                    .addComponent(jButtonMODIFIER)
                    .addComponent(jButtonSUPPRIMER)
                    .addComponent(jButtonCONSULTER)
                    .addComponent(jButtonREFRESH)
                    .addComponent(jButtonEmplois))
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAJOUTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAJOUTERActionPerformed
        // TODO add your handling code here:
        AjouterInstituteur x=new AjouterInstituteur();
        x.setVisible(true);
        
        
        
    }//GEN-LAST:event_jButtonAJOUTERActionPerformed

    private void jButtonMODIFIERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMODIFIERActionPerformed
        // TODO add your handling code here:
        if(jTableINSTITUTEUR.getSelectedRow()!=-1){
            int index=jTableINSTITUTEUR.getSelectedRow();
            TableModel model = jTableINSTITUTEUR.getModel();
            String z= model.getValueAt(index, 0).toString();
            int ncin=Integer.parseInt(z);
            ModifierInstituteur x=new ModifierInstituteur();
            Instituteur i=new Instituteur();
            i=Instituteur.ChargerInstituteur(ncin);
            x.getjTextFieldCIN().setText(Integer.toString(i.getNCIN()));
            x.getjTextFieldNOM().setText(i.getNom());
            x.getjTextFieldPRENOM().setText(i.getPrenom());
            String string = i.getDateN();
            String[] parts= string.split("\\+");
            x.getjComboBoxANNEE().setSelectedItem(parts[0]);
            x.getjComboBoxMOIS().setSelectedItem(parts[1]);
            x.getjComboBoxJOUR().setSelectedItem(parts[2]);
            x.getjComboBoxSEXE().setSelectedItem(i.getSexe());
            x.getjComboBoxPAYS().setSelectedItem(i.getPays());
            x.getjComboBoxVILLE().setSelectedItem(i.getVille());
            if(i.getCodep()!=0)
            x.getjTextFieldCODEPOSTAL().setText(Integer.toString(i.getCodep()));
            x.getjTextFieldEMAIL().setText(i.getEmail());
            x.getjTextFieldNUMTEL().setText(Integer.toString(i.getTel()));
            x.getjTextFieldADRESSE().setText(i.getAdr());
            
            
            Enseigner[] ens=new Enseigner[10];
            ens=Enseigner.RechercherEnseignerParInst(i.getNCIN());
            for(int r=0;r<ens.length;r++){
                System.out.println(ens[r].getInst().getNom());
                
                for(int o=0;o<x.getjTableMatieres().getRowCount();o++){
                    if(ens[r].getMat().getNom().equals(x.getjTableMatieres().getModel().getValueAt(o, 1)))
                    {
                        x.getjTableMatieres().getModel().setValueAt(true, o, 0);
                    }
                }
            }
            x.setInst(i.getNCIN());
            x.setVisible(true);
        
        
        
        
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Instituteur!");
    }//GEN-LAST:event_jButtonMODIFIERActionPerformed

    private void jButtonCONSULTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCONSULTERActionPerformed
        // TODO add your handling code here:
        if(jTableINSTITUTEUR.getSelectedRow()!=-1){
            int index=jTableINSTITUTEUR.getSelectedRow();
            TableModel model = jTableINSTITUTEUR.getModel();
            String z= model.getValueAt(index, 0).toString();
            int ncin=Integer.parseInt(z);
            ConsulterInstituteur x=new ConsulterInstituteur();
            Instituteur i=new Instituteur();
            i=Instituteur.ChargerInstituteur(ncin);
            x.getjTextFieldCIN().setText(Integer.toString(i.getNCIN()));
            x.getjTextFieldNOM().setText(i.getNom());
            x.getjTextFieldPRENOM().setText(i.getPrenom());
            String string = i.getDateN();
            String[] parts= string.split("\\+");
            x.getjTextFieldANNEE().setText(parts[0]);
            x.getjTextFieldMOIS().setText(parts[1]);
            x.getjTextFieldJOUR().setText(parts[2]);
            x.getjTextFieldSEXE().setText(i.getSexe());
            x.getjTextFieldPAYS().setText(i.getPays());
            x.getjTextFieldVILLE().setText(i.getVille());
            if(i.getCodep()!=0)
            x.getjTextFieldCODEPOSTAL().setText(Integer.toString(i.getCodep()));
            x.getjTextFieldEMAIL().setText(i.getEmail());
            x.getjTextFieldNUMTEL().setText(Integer.toString(i.getTel()));
            x.getjTextFieldADRESSE().setText(i.getAdr());
            
            
            Enseigner[] ens=new Enseigner[10];
            ens=Enseigner.RechercherEnseignerParInst(i.getNCIN());
            for(int r=0;r<ens.length;r++){
                System.out.println(ens[r].getInst().getNom());
                
                for(int o=0;o<x.getjTableMatieres().getRowCount();o++){
                    if(ens[r].getMat().getNom().equals(x.getjTableMatieres().getModel().getValueAt(o, 1)))
                    {
                        x.getjTableMatieres().getModel().setValueAt(true, o, 0);
                    }
                }
            }
            x.setVisible(true);
        
        
        
        
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Instituteur!");
    }//GEN-LAST:event_jButtonCONSULTERActionPerformed

    private void jButtonSUPPRIMERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSUPPRIMERActionPerformed
        // TODO add your handling code here:
        if(jTableINSTITUTEUR.getSelectedRow()!=-1){
            int index=jTableINSTITUTEUR.getSelectedRow();
            TableModel model = jTableINSTITUTEUR.getModel();
            String z= model.getValueAt(index, 0).toString();
            int ncin=Integer.parseInt(z);
            SupprimerInstituteur x=new SupprimerInstituteur();
            Instituteur i=new Instituteur();
            i=Instituteur.ChargerInstituteur(ncin);
            x.getjTextFieldNOM().setText(i.getNom());
            x.getjTextFieldPRENOM().setText(i.getPrenom());
            x.getjTextFieldNCIN().setText(Integer.toString(i.getNCIN()));
            x.setVisible(true);
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Instituteur!");
    }//GEN-LAST:event_jButtonSUPPRIMERActionPerformed

    private void jButtonREFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonREFRESHActionPerformed
        // TODO add your handling code here:
        updateTableInst();
    }//GEN-LAST:event_jButtonREFRESHActionPerformed

    private void jButtonECHERCHERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonECHERCHERActionPerformed
        // TODO add your handling code here:
        Instituteur e=new Instituteur();
        Instituteur[] tabe=new Instituteur[1000];
        if(jComboBox1.getSelectedItem().toString()=="N°CIN")
        {e=Instituteur.ChargerInstituteur(Conversion.StringtoInt(jTextFieldRECHERCHE.getText()));
        if(e.getNCIN()!=0)
        {Object[][]o=new Object[][]{{e.getNCIN(),e.getNom(),e.getPrenom()}};
        DefaultTableModel f=new DefaultTableModel(o, new Object[] {"N°CIN", "NOM" ,"PRENOM"  });
        jTableINSTITUTEUR.setModel(f);}
        else JOptionPane.showMessageDialog(null, "Aucun Instituteur avec ce N°CIN!");
        }
        
         else if (jComboBox1.getSelectedItem().toString()=="Nom" ){
            tabe=Instituteur.RechercherInstituteurParNom(jTextFieldRECHERCHE.getText());
            if(tabe!=null)
            {int i=0;
             Object[][]o=new Object[tabe.length][3];
             while (i<tabe.length){
             o[i][0]=tabe[i].getNCIN();
             o[i][1]=tabe[i].getNom();
             o[i][2]=tabe[i].getPrenom();
             i++;
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"N°CIN", "NOM" ,"PRENOM"  } );
            jTableINSTITUTEUR.setModel(model);}
            else JOptionPane.showMessageDialog(null, "Aucun Instituteur avec ce Nom!");
        }
         
        else if (jComboBox1.getSelectedItem().toString()=="Prenom" ){
            tabe=Instituteur.RechercherInstituteurParPrenom(jTextFieldRECHERCHE.getText());
            if(tabe!=null)
            {
             int i=0;
             Object[][]o=new Object[tabe.length][3];
             while (i<tabe.length){
             o[i][0]=tabe[i].getNCIN();
             o[i][1]=tabe[i].getNom();
             o[i][2]=tabe[i].getPrenom();
             i++;
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"N°CIN", "NOM" ,"PRENOM"  } );
            jTableINSTITUTEUR.setModel(model);}
            else JOptionPane.showMessageDialog(null, "Aucun Instituteur avec ce Prenom!");
        }
        
    }//GEN-LAST:event_jButtonECHERCHERActionPerformed

    private void jTextFieldRECHERCHEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRECHERCHEMouseClicked
        // TODO add your handling code here:
        jTextFieldRECHERCHE.setText("");
    }//GEN-LAST:event_jTextFieldRECHERCHEMouseClicked

    private void jButtonEmploisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmploisActionPerformed
        // TODO add your handling code here:
        if(jTableINSTITUTEUR.getSelectedRow()!=-1){
            AfficherEmplois aff=new AfficherEmplois();
            aff.getjTableEmplois().setRowHeight(60);        
            for(int i=0;i<aff.getjTableEmplois().getColumnCount();i++){
            aff.getjTableEmplois().getColumnModel().getColumn(i).setCellRenderer(new TextAreaRenderer());
            }  
            int index=jTableINSTITUTEUR.getSelectedRow();
            TableModel model = jTableINSTITUTEUR.getModel();
            String z= model.getValueAt(index, 0).toString();
            int ncin=Integer.parseInt(z);
            Instituteur x=new Instituteur();
            x=Instituteur.ChargerInstituteur(ncin);
            for(int i=0;i<aff.getjTableEmplois().getRowCount();i++)
                for(int j=0;j<aff.getjTableEmplois().getColumnCount();j++)
                    aff.getjTableEmplois().setValueAt("", i, j);
            Seance p=new Seance();
            Enseigner[] liste=new Enseigner[10];
            try{
            liste=Enseigner.RechercherEnseignerParInst(x.getNCIN());
            for(int v=0;v<liste.length;v++){
            p=Seance.ChargerSeanceParId(liste[v].getId()); 
            if(p.getClasse()!=null){
            for(int i=0;i<liste.length;i++){
                String s=p.getEns().getMat().getNom()+"\n"+Classe.ChargerClasse(p.getClasse().getId()).getNom()+"\n"+Salle.ChargerSalle(p.getSalle().getId()).getNom();
                TableColumn t=aff.getjTableEmplois().getColumn(p.getPeriode());
                aff.getjTableEmplois().setValueAt(s,p.getJour()-1,t.getModelIndex() );
            
            }}}}
            catch(NullPointerException e){}aff.setVisible(true);
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Instituteur!");
    }//GEN-LAST:event_jButtonEmploisActionPerformed
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAJOUTER;
    private javax.swing.JButton jButtonCONSULTER;
    private javax.swing.JButton jButtonECHERCHER;
    private javax.swing.JButton jButtonEmplois;
    private javax.swing.JButton jButtonMODIFIER;
    private javax.swing.JButton jButtonREFRESH;
    private javax.swing.JButton jButtonSUPPRIMER;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTableINSTITUTEUR;
    private javax.swing.JTextField jTextFieldRECHERCHE;
    // End of variables declaration//GEN-END:variables
}
