/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Salle;

import Plus.Conversion;
import Entit√©es.Salle;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Almia
 */
public class InterfacePrincipaleSalle extends javax.swing.JPanel {

    /**
     * Creates new form InterfacePrincipaleSalle
     */ 
    public static final void updateTableSalle(){
        Salle[] tabe=new Salle[1000];
        tabe=Salle.AfficherSalles();
        if(tabe!=null){
             int i=0;
             Object[][]o=new Object[tabe.length][3];
             while (i<tabe.length){
             o[i][0]=tabe[i].getId();
             o[i][1]=tabe[i].getNom();
             o[i][2]=tabe[i].getType();
             i++;
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"ID", "NOM" ,"TYPE"  });
            jTableSALLE.setModel(model);   }
        else {
            DefaultTableModel m=(DefaultTableModel) jTableSALLE.getModel();
            m.setRowCount(0);
            jTableSALLE.setModel(m); 
        }
    }
    
    public InterfacePrincipaleSalle() {
        initComponents();
        if(Salle.AfficherSalles()!=null)
        updateTableSalle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSALLE = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldRECHERCHE = new javax.swing.JTextField();
        jButtonECHERCHER = new javax.swing.JButton();
        jButtonREFRESH = new javax.swing.JButton();
        jButtonAJOUTER = new javax.swing.JButton();
        jButtonMODIFIER = new javax.swing.JButton();
        jButtonSUPPRIMER = new javax.swing.JButton();
        jButtonCONSULTER = new javax.swing.JButton();

        jTableSALLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOM", "TYPE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSALLE.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableSALLE);
        if (jTableSALLE.getColumnModel().getColumnCount() > 0) {
            jTableSALLE.getColumnModel().getColumn(0).setResizable(false);
            jTableSALLE.getColumnModel().getColumn(1).setResizable(false);
            jTableSALLE.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setText("Recherher par:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Nom", "Type" }));

        jTextFieldRECHERCHE.setText("rechercher");
        jTextFieldRECHERCHE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRECHERCHEMouseClicked(evt);
            }
        });

        jButtonECHERCHER.setText("Rechercher");
        jButtonECHERCHER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonECHERCHERActionPerformed(evt);
            }
        });

        jButtonREFRESH.setText("Refresh");
        jButtonREFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonREFRESHActionPerformed(evt);
            }
        });

        jButtonAJOUTER.setText("Ajouter");
        jButtonAJOUTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAJOUTERActionPerformed(evt);
            }
        });

        jButtonMODIFIER.setText("Modifier");
        jButtonMODIFIER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMODIFIERActionPerformed(evt);
            }
        });

        jButtonSUPPRIMER.setText("Supprimer");
        jButtonSUPPRIMER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSUPPRIMERActionPerformed(evt);
            }
        });

        jButtonCONSULTER.setText("Consulter");
        jButtonCONSULTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCONSULTERActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonECHERCHER))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonREFRESH)
                            .addGap(341, 341, 341)
                            .addComponent(jButtonAJOUTER)
                            .addGap(29, 29, 29)
                            .addComponent(jButtonMODIFIER)
                            .addGap(29, 29, 29)
                            .addComponent(jButtonSUPPRIMER)
                            .addGap(27, 27, 27)
                            .addComponent(jButtonCONSULTER))))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonECHERCHER, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAJOUTER)
                    .addComponent(jButtonMODIFIER)
                    .addComponent(jButtonSUPPRIMER)
                    .addComponent(jButtonCONSULTER)
                    .addComponent(jButtonREFRESH))
                .addContainerGap(137, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAJOUTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAJOUTERActionPerformed
        // TODO add your handling code here:
        AjouterSalle x=new AjouterSalle();
        x.setVisible(true);
    }//GEN-LAST:event_jButtonAJOUTERActionPerformed

    private void jButtonMODIFIERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMODIFIERActionPerformed
        // TODO add your handling code here:
        if(jTableSALLE.getSelectedRow()!=-1){
            int index=jTableSALLE.getSelectedRow();
            TableModel model = jTableSALLE.getModel();
            String z= model.getValueAt(index, 0).toString();
            int id=Integer.parseInt(z);
            ModifierSalle x=new ModifierSalle();
            Salle i=new Salle();
            i=Salle.ChargerSalle(id);
            x.getjTextFieldID().setText(Integer.toString(i.getId()));
            x.getjTextFieldNom().setText(i.getNom());
            x.getjComboBoxTYPE().setSelectedItem(i.getType());
            x.setVisible(true);
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner une salle!");
    }//GEN-LAST:event_jButtonMODIFIERActionPerformed

    private void jButtonSUPPRIMERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSUPPRIMERActionPerformed
        // TODO add your handling code here:
        if(jTableSALLE.getSelectedRow()!=-1){
            int index=jTableSALLE.getSelectedRow();
            TableModel model = jTableSALLE.getModel();
            String z= model.getValueAt(index, 0).toString();
            int id=Integer.parseInt(z);
            SupprimerSalle x=new SupprimerSalle();
            Salle i=new Salle();
            i=Salle.ChargerSalle(id);
            x.getjTextFieldID().setText(Integer.toString(i.getId()));
            x.getjTextFieldNOM().setText(i.getNom());
            x.getjTextFieldTYPE().setText(i.getType());
            x.setVisible(true);
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner une Salle!");
    }//GEN-LAST:event_jButtonSUPPRIMERActionPerformed

    private void jButtonREFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonREFRESHActionPerformed
        // TODO add your handling code here:
        updateTableSalle();
    }//GEN-LAST:event_jButtonREFRESHActionPerformed

    private void jButtonCONSULTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCONSULTERActionPerformed
        // TODO add your handling code here:
        if(jTableSALLE.getSelectedRow()!=-1){
            int index=jTableSALLE.getSelectedRow();
            TableModel model = jTableSALLE.getModel();
            String z= model.getValueAt(index, 0).toString();
            int id=Integer.parseInt(z);
            ConsulterSalle x=new ConsulterSalle();
            Salle i=new Salle();
            i=Salle.ChargerSalle(id);
            x.getjTextFieldID().setText(Integer.toString(i.getId()));
            x.getjTextFieldNOM().setText(i.getNom());
            x.getjTextFieldTYPE().setText(i.getType());
            x.setVisible(true);
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner une Salle!");
    }//GEN-LAST:event_jButtonCONSULTERActionPerformed

    private void jButtonECHERCHERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonECHERCHERActionPerformed
        // TODO add your handling code here:
        Salle e=new Salle();
        Salle[] tabe=new Salle[1000];
        if(jComboBox1.getSelectedItem().toString()=="Id")
        {e=Salle.ChargerSalle(Conversion.StringtoInt(jTextFieldRECHERCHE.getText()));
        if(e.getId()!=0)
        {Object[][]o=new Object[][]{{e.getId(),e.getNom(),e.getType()}};
        DefaultTableModel f=new DefaultTableModel(o, new Object[] {"ID", "NOM" ,"TYPE"  });
        jTableSALLE.setModel(f);}
        else JOptionPane.showMessageDialog(null, "Aucune Salle avec cet Id!");
        }
        
         else if (jComboBox1.getSelectedItem().toString()=="Nom" ){
            e=Salle.RechercherSalleParNom(jTextFieldRECHERCHE.getText());
            if(e.getId()!=0)
            {Object[][]o=new Object[][]{{e.getId(),e.getNom(),e.getType()}};
             DefaultTableModel f=new DefaultTableModel(o, new Object[] {"ID", "NOM" ,"TYPE"  });
             jTableSALLE.setModel(f);
             }
            else JOptionPane.showMessageDialog(null, "Aucune salle avec ce Nom!");
        }
         
        else if (jComboBox1.getSelectedItem().toString()=="Type" ){
            tabe=Salle.RechercherSalleParType(jTextFieldRECHERCHE.getText());
            if(tabe!=null)
            {int i=0;
             Object[][]o=new Object[tabe.length][3];
             while (i<tabe.length){
             o[i][0]=tabe[i].getId();
             o[i][1]=tabe[i].getNom();
             o[i][2]=tabe[i].getType();
             i++;
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"ID", "NOM" ,"TYPE"  } );
            jTableSALLE.setModel(model);}
            else JOptionPane.showMessageDialog(null, "Aucune salle avec ce Type!");
        }
    }//GEN-LAST:event_jButtonECHERCHERActionPerformed

    private void jTextFieldRECHERCHEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRECHERCHEMouseClicked
        // TODO add your handling code here:
        jTextFieldRECHERCHE.setText("");
    }//GEN-LAST:event_jTextFieldRECHERCHEMouseClicked

    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAJOUTER;
    private javax.swing.JButton jButtonCONSULTER;
    private javax.swing.JButton jButtonECHERCHER;
    private javax.swing.JButton jButtonMODIFIER;
    private javax.swing.JButton jButtonREFRESH;
    private javax.swing.JButton jButtonSUPPRIMER;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTableSALLE;
    private javax.swing.JTextField jTextFieldRECHERCHE;
    // End of variables declaration//GEN-END:variables
}
