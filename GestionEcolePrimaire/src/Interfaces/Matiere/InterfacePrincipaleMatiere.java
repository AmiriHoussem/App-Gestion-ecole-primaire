/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Matiere;

import Plus.Conversion;
import Entitées.Matiere;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Almia
 */
public class InterfacePrincipaleMatiere extends javax.swing.JPanel {

    /**
     * Creates new form InterfacePrincipaleMatiere
     */
    
    public final static void updateTableMat(){
        Matiere[] tabe=new Matiere[1000];
        tabe=Matiere.AfficherMatieres();
        if(tabe!=null){
             int i=0;
             Object[][]o=new Object[tabe.length][3];
             while (i<tabe.length){
             o[i][0]=tabe[i].getId();
             o[i][1]=tabe[i].getNom();
             
             i++;
             
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"ID", "NOM" }  );
            jTableMatiere.setModel(model);   }
        else {DefaultTableModel m=(DefaultTableModel) jTableMatiere.getModel();
            m.setRowCount(0);
            jTableMatiere.setModel(m);      
        }
    }

    public InterfacePrincipaleMatiere() {
        initComponents();
        updateTableMat();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonREFRESH = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMatiere = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldRECHERCHE = new javax.swing.JTextField();
        jButtonRECHERCHER = new javax.swing.JButton();
        jButtonAJOUTER = new javax.swing.JButton();
        jButtonMODIFIER = new javax.swing.JButton();
        jButtonSUPPRIMER = new javax.swing.JButton();

        jButtonREFRESH.setText("Refresh");
        jButtonREFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonREFRESHActionPerformed(evt);
            }
        });

        jTableMatiere.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMatiere.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jTableMatiere.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableMatiere);

        jLabel1.setText("Recherche par:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Nom" }));

        jTextFieldRECHERCHE.setText("rechercher");
        jTextFieldRECHERCHE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRECHERCHEMouseClicked(evt);
            }
        });

        jButtonRECHERCHER.setText("Rechercher");
        jButtonRECHERCHER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRECHERCHERActionPerformed(evt);
            }
        });

        jButtonAJOUTER.setText("Ajouter");
        jButtonAJOUTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAJOUTERActionPerformed(evt);
            }
        });

        jButtonMODIFIER.setText("Modifier");
        jButtonMODIFIER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMODIFIERActionPerformed(evt);
            }
        });

        jButtonSUPPRIMER.setText("Supprimer");
        jButtonSUPPRIMER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSUPPRIMERActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRECHERCHER))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonREFRESH)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAJOUTER)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonMODIFIER)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSUPPRIMER))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(293, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRECHERCHER))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAJOUTER)
                    .addComponent(jButtonMODIFIER)
                    .addComponent(jButtonSUPPRIMER)
                    .addComponent(jButtonREFRESH))
                .addGap(86, 86, 86))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonREFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonREFRESHActionPerformed
        // TODO add your handling code here:
        updateTableMat();
    }//GEN-LAST:event_jButtonREFRESHActionPerformed

    private void jTextFieldRECHERCHEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRECHERCHEMouseClicked
        // TODO add your handling code here:
        jTextFieldRECHERCHE.setText("");
    }//GEN-LAST:event_jTextFieldRECHERCHEMouseClicked

    private void jButtonRECHERCHERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRECHERCHERActionPerformed
        // TODO add your handling code here:
        Matiere e=new Matiere();
        Matiere[] tabe=new Matiere[1000];
        if(jComboBox1.getSelectedItem().toString()=="Id")
        {e=Matiere.ChargerMatiere(Conversion.StringtoInt(jTextFieldRECHERCHE.getText()));
            if(e.getId()!=0)
            {Object[][]o=new Object[][]{{e.getId(),e.getNom()}};
                DefaultTableModel f=new DefaultTableModel(o, new Object[] {"ID", "NOM" });
                jTableMatiere.setModel(f);}
            else JOptionPane.showMessageDialog(null, "Aucun matière avec cet Id!");
        }
        else if (jComboBox1.getSelectedItem().toString()=="Nom" ){
            e=Matiere.ChargerMatiereParNom(jTextFieldRECHERCHE.getText());
            if(e.getId()!=0)
            {Object[][]o=new Object[][]{{e.getId(),e.getNom()}};
                DefaultTableModel f=new DefaultTableModel(o, new Object[] {"ID", "NOM" });
                jTableMatiere.setModel(f);}
            else JOptionPane.showMessageDialog(null, "Aucun matière avec cet Nom!");}
    }//GEN-LAST:event_jButtonRECHERCHERActionPerformed

    private void jButtonAJOUTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAJOUTERActionPerformed
        // TODO add your handling code here:
        AjouterMatiere x=new AjouterMatiere();
        x.setVisible(true);
    }//GEN-LAST:event_jButtonAJOUTERActionPerformed

    private void jButtonMODIFIERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMODIFIERActionPerformed
        // TODO add your handling code here:
        if(jTableMatiere.getSelectedRow()!=-1){
            int id;
            int index=jTableMatiere.getSelectedRow();
            TableModel model = jTableMatiere.getModel();
            String z= model.getValueAt(index, 1).toString();
            id=Conversion.StringtoInt(z);
            ModifierMatiere x=new ModifierMatiere();

            Matiere i=new Matiere();

            i=Matiere.ChargerMatiere(id);
            x.getjTextFieldID().setText(Integer.toString(i.getId()));
            x.getjTextFieldNOM().setText(i.getNom());

            x.setVisible(true);

        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner une matiere!");
    }//GEN-LAST:event_jButtonMODIFIERActionPerformed

    private void jButtonSUPPRIMERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSUPPRIMERActionPerformed
        // TODO add your handling code here:
        if(jTableMatiere.getSelectedRow()!=-1){
            int index=jTableMatiere.getSelectedRow();
            TableModel model = jTableMatiere.getModel();
            String z= model.getValueAt(index, 0).toString();
            int id=Integer.parseInt(z);
            SupprimerMatiere x=new SupprimerMatiere();
            Matiere i=new Matiere();

            i=Matiere.ChargerMatiere(id);

            x.getjTextFieldNOM().setText(i.getNom());
            x.getjTextFieldID().setText(Integer.toString(i.getId()));
            x.setVisible(true);
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner une matiere!");
    }//GEN-LAST:event_jButtonSUPPRIMERActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAJOUTER;
    private javax.swing.JButton jButtonMODIFIER;
    private javax.swing.JButton jButtonRECHERCHER;
    private javax.swing.JButton jButtonREFRESH;
    private javax.swing.JButton jButtonSUPPRIMER;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTableMatiere;
    private javax.swing.JTextField jTextFieldRECHERCHE;
    // End of variables declaration//GEN-END:variables
}
