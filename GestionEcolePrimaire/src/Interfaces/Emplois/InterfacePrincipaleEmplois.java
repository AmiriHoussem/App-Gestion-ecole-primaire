 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Emplois;

import Plus.Conversion;
import Entitées.Classe;
import Entitées.Instituteur;
import Entitées.Salle;
import Entitées.Seance;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import Plus.TextAreaRenderer;
import Entitées.Enseigner;
import Entitées.Matiere;
import javax.swing.table.TableColumn;

/**
 *
 * @author Almia
 */
public class InterfacePrincipaleEmplois extends javax.swing.JPanel {

    /**
     * Creates new form InterfacePrincipaleEmplois
     */
    
    public static final void updateEmplois(){
        Instituteur[] tabeI=new Instituteur[1000];
        tabeI=Instituteur.AfficherInstituteurs();
        if(tabeI!=null){
             int i=0;
             Object[][]o=new Object[tabeI.length][3];
             while (i<tabeI.length){
             o[i][0]=tabeI[i].getNCIN();
             o[i][1]=tabeI[i].getNom();
             o[i][2]=tabeI[i].getPrenom();
             i++;
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"N°CIN", "NOM" ,"PRENOM"  });
            jTableINSTITUTEUR.setModel(model);    }
        else {
            DefaultTableModel m=(DefaultTableModel) jTableINSTITUTEUR.getModel();
            m.setRowCount(0);
            jTableINSTITUTEUR.setModel(m);
        }
        jComboBoxClasse.removeAllItems();
        jComboBoxClasse.addItem("Classe");
        Classe[] tabeC=new Classe[1000];
        tabeC=Classe.AfficherClasses();
        if(tabeC!=null){
        int i=0;
             while (i<tabeC.length){
             jComboBoxClasse.addItem(tabeC[i].getNom());
             i++;
             
             }
        }
        
        Salle[] tabeS=new Salle[1000];
        tabeS=Salle.AfficherSalles();
        if(tabeS!=null){
        int i=0;
             while (i<tabeS.length){
             jComboBoxSalle.addItem(tabeS[i].getNom());
             i++;
             
             }
        }
        
    }
    
    
    public InterfacePrincipaleEmplois() {
        initComponents();
        jLabel11.setVisible(false);jLabel12.setVisible(false);jLabel13.setVisible(false);
        jTableEmplois.setRowHeight(60);        
        for(int i=0;i<jTableEmplois.getColumnCount();i++){
            jTableEmplois.getColumnModel().getColumn(i).setCellRenderer(new TextAreaRenderer());
        }   
        updateEmplois();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxMatiere = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxClasse = new javax.swing.JComboBox<>();
        jComboBoxSalle = new javax.swing.JComboBox<>();
        jButtonAjouter = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableINSTITUTEUR = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButtonECHERCHER = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldRECHERCHE = new javax.swing.JTextField();
        jButtonREFRESH = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEmplois = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButtonViderTT = new javax.swing.JButton();
        jButtonVider = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Informations"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Matiere :");

        jComboBoxMatiere.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matiere" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Classe :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Salle :");

        jComboBoxClasse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Classe" }));

        jComboBoxSalle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salle" }));

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 102, 102));
        jLabel11.setText("Veuillez-indiquer la matiere");

        jLabel12.setForeground(new java.awt.Color(255, 102, 102));
        jLabel12.setText("Veuillez-indiquer la classe");

        jLabel13.setForeground(new java.awt.Color(255, 102, 102));
        jLabel13.setText("Veuillez-indiquer la salle");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(52, 52, 52))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxMatiere, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxClasse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxSalle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(89, 89, 89))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAjouter)
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxMatiere)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxSalle)
                        .addComponent(jLabel13))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addComponent(jButtonAjouter)
                .addGap(24, 24, 24))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Instituteur"));

        jTableINSTITUTEUR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°CIN", "NOM", "PRENOM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableINSTITUTEUR.getTableHeader().setReorderingAllowed(false);
        jTableINSTITUTEUR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableINSTITUTEURMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableINSTITUTEUR);
        if (jTableINSTITUTEUR.getColumnModel().getColumnCount() > 0) {
            jTableINSTITUTEUR.getColumnModel().getColumn(0).setResizable(false);
            jTableINSTITUTEUR.getColumnModel().getColumn(1).setResizable(false);
            jTableINSTITUTEUR.getColumnModel().getColumn(2).setResizable(false);
        }

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N°CIN", "Nom", "Prenom" }));

        jButtonECHERCHER.setText("Rechercher");
        jButtonECHERCHER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonECHERCHERActionPerformed(evt);
            }
        });

        jLabel10.setText("Recherher par:");

        jTextFieldRECHERCHE.setText("rechercher");
        jTextFieldRECHERCHE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRECHERCHEMouseClicked(evt);
            }
        });

        jButtonREFRESH.setText("Refresh");
        jButtonREFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonREFRESHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButtonREFRESH))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonECHERCHER)
                            .addGap(40, 40, 40))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonECHERCHER))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonREFRESH)
                .addGap(10, 10, 10))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Emplois"));

        jTableEmplois.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "8h-10h", "10h-12h", "12h-13h", "13h-15h", "15h-17h"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEmplois.setColumnSelectionAllowed(true);
        jTableEmplois.setGridColor(new java.awt.Color(0, 0, 0));
        jTableEmplois.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableEmplois);
        jTableEmplois.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTableEmplois.getColumnModel().getColumnCount() > 0) {
            jTableEmplois.getColumnModel().getColumn(0).setResizable(false);
            jTableEmplois.getColumnModel().getColumn(1).setResizable(false);
            jTableEmplois.getColumnModel().getColumn(2).setResizable(false);
            jTableEmplois.getColumnModel().getColumn(3).setResizable(false);
            jTableEmplois.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel4.setText("Lundi");

        jLabel5.setText("Mardi");

        jLabel6.setText("Mercredi");

        jLabel7.setText("Jeudi");

        jLabel8.setText("Vendredi");

        jLabel9.setText("Samedi");

        jButtonViderTT.setText("Supprimer toutes les Seances");
        jButtonViderTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViderTTActionPerformed(evt);
            }
        });

        jButtonVider.setText("Supprimer Seance");
        jButtonVider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonViderTT)
                .addGap(18, 18, 18)
                .addComponent(jButtonVider)
                .addGap(51, 51, 51))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel4)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel5)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel6)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel7)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel8)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel9))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonViderTT)
                    .addComponent(jButtonVider))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        // TODO add your handling code here:
        if(jComboBoxMatiere.getSelectedIndex()==0)
            jLabel11.setVisible(true);
        else jLabel11.setVisible(false);
        
        if(jComboBoxClasse.getSelectedIndex()==0)
            jLabel12.setVisible(true);
        else jLabel12.setVisible(false);
        
        if(jComboBoxSalle.getSelectedIndex()==0)
            jLabel13.setVisible(true);
        else jLabel13.setVisible(false);
        if(jLabel11.isVisible()==false && jLabel12.isVisible()==false && jLabel13.isVisible()==false){
        if(jTableEmplois.getSelectedRow()!=-1 && jTableEmplois.getSelectedColumn()!=-1 ){  
            int row=jTableEmplois.getSelectedRow();
            int column=jTableEmplois.getSelectedColumn();
            TableModel model = jTableEmplois.getModel();
            Seance see=Seance.ChargerSeanceParSalle(row+1,jTableEmplois.getColumnName(column), Salle.RechercherSalleParNom(jComboBoxSalle.getSelectedItem().toString()).getId());
            Seance sec=Seance.ChargerSeanceParClasse(row+1,jTableEmplois.getColumnName(column), Classe.ChargerClasseParNom(jComboBoxClasse.getSelectedItem().toString()).getId());
                    String s=jComboBoxMatiere.getSelectedItem().toString()+"\n"+jComboBoxClasse.getSelectedItem().toString()+"\n"+jComboBoxSalle.getSelectedItem().toString();
                    Seance se=new Seance();
                    int index=jTableINSTITUTEUR.getSelectedRow();
                    TableModel mod = jTableINSTITUTEUR.getModel();
                    int z= (int) mod.getValueAt(index, 0);
                    Enseigner ens=new Enseigner();
                    ens=Enseigner.ChargerEnseigner(z,Matiere.ChargerMatiereParNom(jComboBoxMatiere.getSelectedItem().toString()).getId() );
                    se.setEns(ens);
                    se.setJour(row+1);
                    se.setPeriode(jTableEmplois.getColumnName(column));
                    se.setSalle(Salle.RechercherSalleParNom(jComboBoxSalle.getSelectedItem().toString()));
                    se.setClasse(Classe.ChargerClasseParNom(jComboBoxClasse.getSelectedItem().toString()));
          if(model.getValueAt(row, column)=="")
             {if(see.getEns()==null){
                 if(sec.getEns()==null){
                     if(se.AjouterSeance()){         
                     model.setValueAt(s, row, column);}
                     else JOptionPane.showMessageDialog(null, "Erreur!");}
                 else JOptionPane.showMessageDialog(null, "Classe programmée pour une autre seance!");
             }else JOptionPane.showMessageDialog(null, "Salle programmée pour une autre seance!");}
          else {
              if(see.getEns()!=null && se.getEns().getInst().getNCIN()==see.getEns().getInst().getNCIN()|| see.getEns()==null){
                 if(sec.getEns()!=null && se.getEns().getInst().getNCIN()==sec.getEns().getInst().getNCIN()|| sec.getEns()==null){
                     if(se.ModifierSeance(ens.getId(),row+1,jTableEmplois.getColumnName(column))){
                     model.setValueAt(s, row, column);}
                     else JOptionPane.showMessageDialog(null, "Erreur!");}
                 else JOptionPane.showMessageDialog(null, "Classe programmée pour une autre seance!");
              }else JOptionPane.showMessageDialog(null, "Salle programmée pour une autre seance!");
          
          }}

        else JOptionPane.showMessageDialog(null, "Veuillez selectionner une case valide!");}
          
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jTableINSTITUTEURMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableINSTITUTEURMouseClicked
        // TODO add your handling code here:
        if(jTableINSTITUTEUR.getSelectedRow()!=-1){
            int index=jTableINSTITUTEUR.getSelectedRow();
            TableModel model = jTableINSTITUTEUR.getModel();
            String z= model.getValueAt(index, 0).toString();
            int ncin=Integer.parseInt(z);
            jComboBoxMatiere.removeAllItems();
            jComboBoxMatiere.addItem("Matiere");
            Instituteur x=new Instituteur();
            x=Instituteur.ChargerInstituteur(ncin);
            Enseigner[] ens=new Enseigner[10];
            ens=Enseigner.RechercherEnseignerParInst(x.getNCIN());
            int a=0;
            while(a<ens.length){                
                jComboBoxMatiere.addItem(ens[a].getMat().getNom());
                a++;
            }
            
            for(int i=0;i<jTableEmplois.getRowCount();i++)
                for(int j=0;j<jTableEmplois.getColumnCount();j++)
                    jTableEmplois.setValueAt("", i, j);
            Seance p=new Seance();
            Enseigner[] liste=new Enseigner[10];
            try{
            liste=Enseigner.RechercherEnseignerParInst(x.getNCIN());
            for(int v=0;v<liste.length;v++){
            p=Seance.ChargerSeanceParId(liste[v].getId()); 
            if(p.getClasse()!=null){
            for(int i=0;i<liste.length;i++){
                String s=p.getEns().getMat().getNom()+"\n"+Classe.ChargerClasse(p.getClasse().getId()).getNom()+"\n"+Salle.ChargerSalle(p.getSalle().getId()).getNom();
                 TableColumn t=jTableEmplois.getColumn(p.getPeriode());
                jTableEmplois.setValueAt(s,p.getJour()-1,t.getModelIndex() );
            
            }}}}
            catch(NullPointerException e){}
        
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Instituteur!");
        
    }//GEN-LAST:event_jTableINSTITUTEURMouseClicked

    private void jTextFieldRECHERCHEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRECHERCHEMouseClicked
        // TODO add your handling code here:
        jTextFieldRECHERCHE.setText("");
    }//GEN-LAST:event_jTextFieldRECHERCHEMouseClicked

    private void jButtonECHERCHERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonECHERCHERActionPerformed
        // TODO add your handling code here:
        Instituteur e=new Instituteur();
        Instituteur[] tabe=new Instituteur[1000];
        if(jComboBox1.getSelectedItem().toString()=="N°CIN")
        {e=Instituteur.ChargerInstituteur(Conversion.StringtoInt(jTextFieldRECHERCHE.getText()));
            if(e.getNCIN()!=0)
            {Object[][]o=new Object[][]{{e.getNCIN(),e.getNom(),e.getPrenom()}};
                DefaultTableModel f=new DefaultTableModel(o, new Object[] {"N°CIN", "NOM" ,"PRENOM"  });
                jTableINSTITUTEUR.setModel(f);}
            else JOptionPane.showMessageDialog(null, "Aucun Instituteur avec ce N°CIN!");
        }

        else if (jComboBox1.getSelectedItem().toString()=="Nom" ){
            tabe=Instituteur.RechercherInstituteurParNom(jTextFieldRECHERCHE.getText());
            if(tabe!=null)
            {int i=0;
                Object[][]o=new Object[tabe.length][3];
                while (i<tabe.length){
                    o[i][0]=tabe[i].getNCIN();
                    o[i][1]=tabe[i].getNom();
                    o[i][2]=tabe[i].getPrenom();
                    i++;
                }
                DefaultTableModel model = new DefaultTableModel(o,new Object[] {"N°CIN", "NOM" ,"PRENOM"  } );
                jTableINSTITUTEUR.setModel(model);}
            else JOptionPane.showMessageDialog(null, "Aucun Instituteur avec ce Nom!");
        }

        else if (jComboBox1.getSelectedItem().toString()=="Prenom" ){
            tabe=Instituteur.RechercherInstituteurParPrenom(jTextFieldRECHERCHE.getText());
            if(tabe!=null)
            {
                int i=0;
                Object[][]o=new Object[tabe.length][3];
                while (i<tabe.length){
                    o[i][0]=tabe[i].getNCIN();
                    o[i][1]=tabe[i].getNom();
                    o[i][2]=tabe[i].getPrenom();
                    i++;
                }
                DefaultTableModel model = new DefaultTableModel(o,new Object[] {"N°CIN", "NOM" ,"PRENOM"  } );
                jTableINSTITUTEUR.setModel(model);}
            else JOptionPane.showMessageDialog(null, "Aucun Instituteur avec ce Prenom!");
        }

    }//GEN-LAST:event_jButtonECHERCHERActionPerformed

    private void jButtonREFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonREFRESHActionPerformed
        // TODO add your handling code here:
        Instituteur[] tabe=new Instituteur[1000];
        tabe=Instituteur.AfficherInstituteurs();
        if(tabe!=null){
             int i=0;
             Object[][]o=new Object[tabe.length][3];
             while (i<tabe.length){
             o[i][0]=tabe[i].getNCIN();
             o[i][1]=tabe[i].getNom();
             o[i][2]=tabe[i].getPrenom();
             i++;
             }
            DefaultTableModel model = new DefaultTableModel(o,new Object[] {"N°CIN", "NOM" ,"PRENOM"  });
            jTableINSTITUTEUR.setModel(model);    }
        else {
            DefaultTableModel m=(DefaultTableModel) jTableINSTITUTEUR.getModel();
            m.setRowCount(0);
            jTableINSTITUTEUR.setModel(m);
        }
        jComboBoxMatiere.removeAllItems();
        jComboBoxMatiere.addItem("Matiere");
        for(int i=0;i<jTableEmplois.getRowCount();i++)
                for(int j=0;j<jTableEmplois.getColumnCount();j++)
                    jTableEmplois.setValueAt("", i, j);
    }//GEN-LAST:event_jButtonREFRESHActionPerformed

    private void jButtonViderTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViderTTActionPerformed
        // TODO add your handling code here:
        if(jTableINSTITUTEUR.getSelectedRow()!=-1){
            int index=jTableINSTITUTEUR.getSelectedRow();
            TableModel model = jTableINSTITUTEUR.getModel();
            String z= model.getValueAt(index, 0).toString();
            int ncin=Integer.parseInt(z);
            Seance s=new Seance();
            if(s.SupprimerTTSeance(ncin)){
                for(int i=0;i<jTableEmplois.getRowCount();i++)
                for(int j=0;j<jTableEmplois.getColumnCount();j++)
                    jTableEmplois.setValueAt("", i, j);
            }else JOptionPane.showMessageDialog(null, "Erreur!");
            }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Instituteur!");
    }//GEN-LAST:event_jButtonViderTTActionPerformed

    private void jButtonViderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViderActionPerformed
        // TODO add your handling code here:
        if(jTableEmplois.getSelectedRow()!=-1 && jTableEmplois.getSelectedColumn()!=-1){
            int row=jTableEmplois.getSelectedRow();
            int column=jTableEmplois.getSelectedColumn();
            TableModel model = jTableEmplois.getModel();
                    if(jTableINSTITUTEUR.getSelectedRow()!=-1){
                         int index=jTableINSTITUTEUR.getSelectedRow();
                         TableModel modele = jTableINSTITUTEUR.getModel();
                         String z= modele.getValueAt(index, 0).toString();
                         int ncin=Integer.parseInt(z);
                         Seance s=new Seance();
                                 if(s.SupprimerSeance(ncin,row+1,jTableEmplois.getColumnName(column))){
                                      jTableEmplois.setValueAt("", row, column);
                                 }else JOptionPane.showMessageDialog(null, "Erreur!");
                    }
                    else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Instituteur!");
                    
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner une case valide!");
    }//GEN-LAST:event_jButtonViderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonECHERCHER;
    private javax.swing.JButton jButtonREFRESH;
    private javax.swing.JButton jButtonVider;
    private javax.swing.JButton jButtonViderTT;
    private javax.swing.JComboBox<String> jComboBox1;
    private static javax.swing.JComboBox<String> jComboBoxClasse;
    private javax.swing.JComboBox<String> jComboBoxMatiere;
    private static javax.swing.JComboBox<String> jComboBoxSalle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableEmplois;
    private static javax.swing.JTable jTableINSTITUTEUR;
    private javax.swing.JTextField jTextFieldRECHERCHE;
    // End of variables declaration//GEN-END:variables
}
