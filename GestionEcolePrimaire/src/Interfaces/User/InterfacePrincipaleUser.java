/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.User;

import Plus.Conversion;
import Entit√©es.User;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Almia
 */
public class InterfacePrincipaleUser extends javax.swing.JPanel {

    /**
     * Creates new form InterfacePrincipaleUser
     */
    public final static void updateTableUser() {
        User[] tabU=new User[1000];
        tabU=User.AfficherUsers();
        DefaultTableModel m=(DefaultTableModel) jTableUser.getModel();
        m.setRowCount(0);
        if(tabU!=null){
            for(int i=0;i<tabU.length;i++){
                m.addRow(new Object[]{tabU[i].getUsername(),tabU[i].getNom(),tabU[i].getPrenom(),tabU[i].getEmail()});
            }
            jTableUser.setModel(m);   }
        else {
            m.setRowCount(0);    
        }
    }
    
    public InterfacePrincipaleUser() {
        initComponents();
        updateTableUser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldRECHERCHE = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButtonAJOUTER = new javax.swing.JButton();
        jButtonMODIFIER = new javax.swing.JButton();
        jButtonSUPPRIMER = new javax.swing.JButton();
        jButtonREFRESH = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();

        jLabel1.setText("Recherche par:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Login", "Nom", "Prenom" }));

        jTextFieldRECHERCHE.setText("rechercher");
        jTextFieldRECHERCHE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRECHERCHEMouseClicked(evt);
            }
        });

        jButton1.setText("Rechercher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonAJOUTER.setText("Ajouter");
        jButtonAJOUTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAJOUTERActionPerformed(evt);
            }
        });

        jButtonMODIFIER.setText("Modifier");
        jButtonMODIFIER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMODIFIERActionPerformed(evt);
            }
        });

        jButtonSUPPRIMER.setText("Supprimer");
        jButtonSUPPRIMER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSUPPRIMERActionPerformed(evt);
            }
        });

        jButtonREFRESH.setText("Refresh");
        jButtonREFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonREFRESHActionPerformed(evt);
            }
        });

        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LOGIN", "NOM", "PRENOM", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUser.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jTableUser.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableUser);
        if (jTableUser.getColumnModel().getColumnCount() > 0) {
            jTableUser.getColumnModel().getColumn(0).setResizable(false);
            jTableUser.getColumnModel().getColumn(1).setResizable(false);
            jTableUser.getColumnModel().getColumn(2).setResizable(false);
            jTableUser.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(144, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonREFRESH)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAJOUTER)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonMODIFIER)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonSUPPRIMER))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(175, 175, 175))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldRECHERCHE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAJOUTER)
                    .addComponent(jButtonMODIFIER)
                    .addComponent(jButtonSUPPRIMER)
                    .addComponent(jButtonREFRESH))
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldRECHERCHEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRECHERCHEMouseClicked
        // TODO add your handling code here:
        jTextFieldRECHERCHE.setText("");
    }//GEN-LAST:event_jTextFieldRECHERCHEMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       User e=new User();
        User[] tabe=new User[30];
        DefaultTableModel m=(DefaultTableModel) jTableUser.getModel();  
        if(jComboBox1.getSelectedItem().toString()=="Login")
        {e=User.ChargerUser(jTextFieldRECHERCHE.getText());
            if(e.getPassword()!="")
            {   m.setRowCount(0);
                m.addRow(new Object[]{e.getUsername(),e.getNom(),e.getPrenom(),e.getEmail()});
            }
            else JOptionPane.showMessageDialog(null, "Aucun Utilisateur avec ce Login!");
        }
        else if(jComboBox1.getSelectedItem().toString()=="Nom"){
            tabe=User.ChargerParNom(jTextFieldRECHERCHE.getText());
            m.setRowCount(0);
            try{
            for(int i=0;i<tabe.length;i++)
                m.addRow(new Object[]{tabe[i].getUsername(),tabe[i].getNom(),tabe[i].getPrenom(),tabe[i].getEmail()});}
            catch(NullPointerException np){}
        }
        else if(jComboBox1.getSelectedItem().toString()=="Prenom"){
            tabe=User.ChargerParPrenom(jTextFieldRECHERCHE.getText());
            m.setRowCount(0);
            try{
            for(int i=0;i<tabe.length;i++)
                m.addRow(new Object[]{tabe[i].getUsername(),tabe[i].getNom(),tabe[i].getPrenom(),tabe[i].getEmail()});}
            catch(NullPointerException np){}
            
        }   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonAJOUTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAJOUTERActionPerformed
        // TODO add your handling code here:
        AjouterUser x=new AjouterUser();
        x.setVisible(true);
    }//GEN-LAST:event_jButtonAJOUTERActionPerformed

    private void jButtonMODIFIERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMODIFIERActionPerformed
        // TODO add your handling code here:
        if(jTableUser.getSelectedRow()!=-1){
            int id;
            int index=jTableUser.getSelectedRow();
            TableModel model = jTableUser.getModel();
            String z= model.getValueAt(index, 0).toString();
            ModifierUser x=new ModifierUser();
            User i=new User();
            i=User.ChargerUser(z);
            x.setUtil(i.getUsername());
            x.getjTextFieldLOGIN().setText(i.getUsername());
            x.getjPasswordField1().setText(i.getPassword());
            x.getjTextFieldNom().setText(i.getNom());
            x.getjTextFieldPrenom().setText(i.getPrenom());
            x.getjTextFieldEmail().setText(i.getEmail());
            for (int j=0;j<i.getAcces().length();j++){
            if (i.getAcces().charAt(j)=='1')
            x.getEleve().setSelected(true);
            else if (i.getAcces().charAt(j)=='2')
            x.getInstituteur().setSelected(true);
            else if (i.getAcces().charAt(j)=='3')
            x.getSalle().setSelected(true);
            else if (i.getAcces().charAt(j)=='4')
            x.getClasse().setSelected(true);
            else if (i.getAcces().charAt(j)=='5')
            x.getEmplois().setSelected(true);
            else if (i.getAcces().charAt(j)=='6')
            x.getAbsence().setSelected(true);
            else if (i.getAcces().charAt(j)=='7')
            x.getNote().setSelected(true);
            else if (i.getAcces().charAt(j)=='8')
            x.getConseil().setSelected(true);
            else if (i.getAcces().charAt(j)=='9')
            x.getParametre().setSelected(true);}
            x.setVisible(true);

        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Utilisateur!");
    }//GEN-LAST:event_jButtonMODIFIERActionPerformed

    private void jButtonSUPPRIMERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSUPPRIMERActionPerformed
        // TODO add your handling code here:
        if(jTableUser.getSelectedRow()!=-1){
            int index=jTableUser.getSelectedRow();
            TableModel model = jTableUser.getModel();
            String z= model.getValueAt(index, 0).toString();
            SupprimerUser x=new SupprimerUser();
            User i=User.ChargerUser(z);
            x.getjTextFieldLOGIN().setText(i.getUsername());
            x.setVisible(true);
        }
        else JOptionPane.showMessageDialog(null, "Veuillez selectionner un Utilisateur!");
    }//GEN-LAST:event_jButtonSUPPRIMERActionPerformed

    private void jButtonREFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonREFRESHActionPerformed
        // TODO add your handling code here:
        updateTableUser();
    }//GEN-LAST:event_jButtonREFRESHActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAJOUTER;
    private javax.swing.JButton jButtonMODIFIER;
    private javax.swing.JButton jButtonREFRESH;
    private javax.swing.JButton jButtonSUPPRIMER;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTableUser;
    private javax.swing.JTextField jTextFieldRECHERCHE;
    // End of variables declaration//GEN-END:variables
}
